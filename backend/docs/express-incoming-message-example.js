const IncomingMessage = {
        _readableState: {
           objectMode: false,
           highWaterMark: 16384,
           buffer: { length: 0 },
           length: 0,
           pipes: null,
           pipesCount: 0,
           flowing: true,
           ended: true,
           endEmitted: true,
           reading: false,
           sync: true,
           needReadable: false,
           emittedReadable: false,
           readableListening: false,
           resumeScheduled: false,
           emitClose: true,
           destroyed: false,
           defaultEncoding: 'utf8',
           awaitDrain: 0,
           readingMore: true,
           decoder: null,
           encoding: null },
        readable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        socket:
         { encrypted: true,
           readable: false,
           remoteAddress: '127.0.0.1',
           address: [Function: address],
           end: [Function] },
        connection:
         { encrypted: true,
           readable: false,
           remoteAddress: '127.0.0.1',
           address: [Function: address],
           end: [Function] },
        httpVersionMajor: '1',
        httpVersionMinor: '1',
        httpVersion: '1.1',
        complete: true,
        headers:
         { host: 'localhost:3000',
           connection: 'keep-alive',
           'cache-control': 'no-cache',
           'upgrade-insecure-requests': '1',
           'user-agent':
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
           accept:
            'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
           'accept-encoding': 'gzip, deflate, br',
           'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8',
           'if-none-match': 'W/"6-T1n80esREtcp0eCEVRtc0lY3Pts"',
           'content-type': 'application/json',
           'content-length': 52,
           'x-request-id': 'offlineContext_requestId_6816581031547295' },
        rawHeaders: [],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: null,
        url: '/emails',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client:
         { encrypted: true,
           readable: false,
           remoteAddress: '127.0.0.1',
           address: [Function: address],
           end: [Function] },
        _consuming: false,
        _dumped: false,
        ip: '127.0.0.1',
        body: { site: 'somewhere.com', email: 'mickey@disney.com' },
        baseUrl: '',
        originalUrl: '/emails',
        next: [Function: next],
        _parsedUrl:
         Url {
           protocol: null,
           slashes: null,
           auth: null,
           host: null,
           port: null,
           hostname: null,
           hash: null,
           search: null,
           query: null,
           pathname: '/emails',
           path: '/emails',
           href: '/emails',
           _raw: '/emails' },
        params: {},
        query: {},
        res:
         ServerResponse {
           domain: null,
           _events: { end: [Function], finish: [Function] },
           _eventsCount: 2,
           _maxListeners: undefined,
           output: [],
           outputEncodings: [],
           outputCallbacks: [],
           outputSize: 0,
           writable: true,
           _last: false,
           chunkedEncoding: false,
           shouldKeepAlive: true,
           useChunkedEncodingByDefault: false,
           sendDate: true,
           _removedConnection: false,
           _removedContLen: false,
           _removedTE: false,
           _contentLength: null,
           _hasBody: true,
           _trailer: '',
           finished: false,
           _headerSent: false,
           socket:
            Writable {
              _writableState: [WritableState],
              writable: true,
              _write: [Function: write],
              domain: null,
              _events: [Object],
              _eventsCount: 1,
              _maxListeners: undefined,
              _httpMessage: [Circular] },
           connection:
            Writable {
              _writableState: [WritableState],
              writable: true,
              _write: [Function: write],
              domain: null,
              _events: [Object],
              _eventsCount: 1,
              _maxListeners: undefined,
              _httpMessage: [Circular] },
           _header: null,
           _onPendingData: [Function: noopPendingOutput],
           _sent100: false,
           _expect_continue: false,
           write: [Function],
           req: [Circular],
           locals: {},
           [Symbol(isCorked)]: false,
           [Symbol(outHeadersKey)]: { 'x-powered-by': [Array] },
           [Symbol()]: [],
           [Symbol()]: {} },
        _body: true,
        length: undefined,
        route:
         Route { path: '/emails', stack: [ [Layer] ], methods: { post: true } } }
